# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def lowestCommonAncestor(self, root: TreeNode, p: TreeNode, q: TreeNode) -> TreeNode:
        curr= root

        if not root: 
            return None

        while curr:
            if curr.val>p.val and curr.val> q.val:
                curr= curr.left
            elif curr.val<p.val and curr.val< q.val:
                curr= curr.right
            else:
                return curr

#treat it like a normal binary search array. 
#Complexity: log (height)

        
